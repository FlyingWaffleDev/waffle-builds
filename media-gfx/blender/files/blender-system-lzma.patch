diff --git a/CMakeLists.txt b/CMakeLists.txt
index eb04da7..ae5bb9f 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -314,6 +314,7 @@ option(WITH_LZO           "Enable fast LZO compression (used for pointcache)" ON
 option(WITH_LZMA          "Enable best LZMA compression, (used for pointcache)" ON)
 if(UNIX AND NOT APPLE)
   option(WITH_SYSTEM_LZO    "Use the system LZO library" OFF)
+  option(WITH_SYSTEM_LZMA   "Use the system LZMA library" OFF) 
 endif()
 option(WITH_DRACO         "Enable Draco mesh compression Python module (used for glTF)" ON)
 
diff --git a/source/blender/blenkernel/CMakeLists.txt b/source/blender/blenkernel/CMakeLists.txt
index f6df3f1..90335dd 100644
--- a/source/blender/blenkernel/CMakeLists.txt
+++ b/source/blender/blenkernel/CMakeLists.txt
@@ -615,12 +616,22 @@ if(WITH_LZO)
 endif()
 
 if(WITH_LZMA)
-  list(APPEND INC_SYS
-    ../../../extern/lzma
-  )
-  list(APPEND LIB
-    extern_lzma
-  )
+  if(WITH_SYSTEM_LZMA)
+    list(APPEND INC_SYS
+      ${LZMA_INCLUDE_DIR}
+    )
+    list(APPEND LIB
+      ${LZMA_LIBRARIES}
+    )
+    add_definitions(-DWITH_SYSTEM_LZO)
+  else()  
+    list(APPEND INC_SYS
+      ../../../extern/lzma
+    )
+    list(APPEND LIB
+      extern_lzma
+    )
+  endif()
   add_definitions(-DWITH_LZMA)
 endif()
 
diff --git a/extern/CMakeLists.txt b/extern/CMakeLists.txt
index 235c2fa..0443fd3 100644
--- a/extern/CMakeLists.txt
+++ b/extern/CMakeLists.txt
@@ -61,7 +61,7 @@ if(WITH_LZO AND NOT WITH_SYSTEM_LZO)
   add_subdirectory(lzo)
 endif()
 
-if(WITH_LZMA)
+if(WITH_LZMA AND NOT WITH_SYSTEM_LZMA)
   add_subdirectory(lzma)
 endif()
 
diff --git a/build_files/cmake/Modules/FindLZMA.cmake b/build_files/cmake/Modules/FindLZMA.cmake
new file mode 100644
index 0000000..ea844f7
--- /dev/null
+++ b/build_files/cmake/Modules/FindLZMA.cmake
@@ -0,0 +1,60 @@
+# - Find LZMA library
+# Find the native LZMA includes and library
+# This module defines
+#  LZMA_INCLUDE_DIRS, where to find lzo1x.h, Set when
+#                        LZMA_INCLUDE_DIR is found.
+#  LZMA_LIBRARIES, libraries to link against to use LZMA.
+#  LZMA_ROOT_DIR, The base directory to search for LZMA.
+#                    This can also be an environment variable.
+#  LZMA_FOUND, If false, do not try to use LZMA.
+#
+# also defined, but not for general use are
+#  LZMA_LIBRARY, where to find the LZMA library.
+
+#=============================================================================
+# Copyright 2015 Blender Foundation.
+#
+# Distributed under the OSI-approved BSD 3-Clause License,
+# see accompanying file BSD-3-Clause-license.txt for details.
+#=============================================================================
+
+# If LZMA_ROOT_DIR was defined in the environment, use it.
+IF(NOT LZMA_ROOT_DIR AND NOT $ENV{LZMA_ROOT_DIR} STREQUAL "")
+  SET(LZMA_ROOT_DIR $ENV{LZMA_ROOT_DIR})
+ENDIF()
+
+SET(_lzo_SEARCH_DIRS
+  ${LZMA_ROOT_DIR}
+)
+
+FIND_PATH(LZMA_INCLUDE_DIR lzma/lzma12.h
+  HINTS
+    ${_lzma_SEARCH_DIRS}
+  PATH_SUFFIXES
+    include
+)
+
+FIND_LIBRARY(LZMA_LIBRARY
+  NAMES
+    lzma
+  HINTS
+    ${_lzma_SEARCH_DIRS}
+  PATH_SUFFIXES
+    lib64 lib
+  )
+
+# handle the QUIETLY and REQUIRED arguments and set LZMA_FOUND to TRUE if
+# all listed variables are TRUE
+INCLUDE(FindPackageHandleStandardArgs)
+FIND_PACKAGE_HANDLE_STANDARD_ARGS(LZMA DEFAULT_MSG
+  LZMA_LIBRARY LZMA_INCLUDE_DIR)
+
+IF(LZMA_FOUND)
+  SET(LZMA_LIBRARIES ${LZMA_LIBRARY})
+  SET(LZMA_INCLUDE_DIRS ${LZMA_INCLUDE_DIR})
+ENDIF()
+
+MARK_AS_ADVANCED(
+  LZMA_INCLUDE_DIR
+  LZMA_LIBRARY
+)
